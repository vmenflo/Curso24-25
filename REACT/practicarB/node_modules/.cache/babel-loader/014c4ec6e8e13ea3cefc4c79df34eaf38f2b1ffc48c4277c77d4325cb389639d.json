{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Proyectos\\\\Curso24-25\\\\REACT\\\\practicarB\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapaBotones = props => {\n  let lista = [];\n  for (let i = 0; i < props.listaBotones.length; i++) {\n    let lista2 = [];\n    for (let j = 0; j < props.listaBotones.length; j++) {\n      if (i === 0) {\n        lista2.push(/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => props.clicla(i, j),\n            color: props.listaBotones[i][j].color,\n            outline: props.listaBotones[i][j].outline\n          }, i + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 23\n          }, this)\n        }, void 0, false));\n      } else {\n        lista2.push(/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: props.listaBotones[i][j].color,\n            outline: props.listaBotones[i][j].outline\n          }, i + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 23\n          }, this)\n        }, void 0, false));\n      }\n    }\n    lista.push(/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [lista2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true));\n  }\n  return lista;\n};\n_c = MapaBotones;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listaBotones: Array(9).fill(null)\n      // no se puede modificar el state\n    };\n  }\n  clica(x, y) {\n    // x se supone que la columna, y la fila\n    let tope = 8;\n    let flag = f;\n  }\n  componentWillMount() {\n    // aquí es donde creo las nueve columnas con los datos iniciales.\n    let copia = this.state.listaBotones;\n    for (let i = 0; i < copia.length; i++) {\n      let lista2 = [];\n      for (let j = 0; j < copia.length; j++) {\n        lista2.push({\n          outline: true,\n          color: \"primary\"\n        });\n      }\n      copia[i] = lista2;\n    }\n    this.setState({\n      listaBotones: copia\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" BUCHACA \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapaBotones, {\n        listaBotones: this.state.listaBotones,\n        clica: (x, y) => this.clica(x, y)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"MapaBotones\");","map":{"version":3,"names":["React","Component","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","MapaBotones","props","lista","i","listaBotones","length","lista2","j","push","children","onClick","clicla","color","outline","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","constructor","state","Array","fill","clica","x","y","tope","flag","f","componentWillMount","copia","setState","render","className","$RefreshReg$"],"sources":["C:/xampp/htdocs/Proyectos/Curso24-25/REACT/practicarB/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst MapaBotones = (props) => {\r\n  let lista = []\r\n  for (let i = 0; i < props.listaBotones.length; i++) {\r\n    let lista2=[]\r\n    for (let j = 0; j < props.listaBotones.length; j++) {\r\n      if(i===0){\r\n        lista2.push(<><Button key={i+j} onClick={()=>props.clicla(i,j)} color={props.listaBotones[i][j].color} outline={props.listaBotones[i][j].outline}/></>)\r\n      }else{\r\n        lista2.push(<><Button key={i+j} color={props.listaBotones[i][j].color} outline={props.listaBotones[i][j].outline}/></>)\r\n      }\r\n    }\r\n    lista.push(<>{lista2}<br/></>)\r\n  }\r\n  return(lista);\r\n}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listaBotones: Array(9).fill(null),\r\n      // no se puede modificar el state\r\n    }\r\n  }\r\n  clica(x, y) {\r\n    // x se supone que la columna, y la fila\r\n    let tope = 8;\r\n    let flag=f\r\n  }\r\n  componentWillMount() {\r\n    // aquí es donde creo las nueve columnas con los datos iniciales.\r\n    let copia = this.state.listaBotones;\r\n    for (let i = 0; i < copia.length; i++) {\r\n      let lista2 = [];\r\n      for (let j = 0; j < copia.length; j++) {\r\n        lista2.push({outline:true,color:\"primary\"});\r\n      }\r\n      copia[i]=lista2;\r\n    }\r\n    this.setState({listaBotones:copia});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> BUCHACA </h1>\r\n        <MapaBotones listaBotones={this.state.listaBotones} clica={(x,y)=>this.clica(x,y)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}