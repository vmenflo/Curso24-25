{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Proyectos\\\\Curso24-25\\\\REACT\\\\practicar\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Botonera(props) {\n  if (props.playable) {\n    let lista = [];\n\n    // Suponiendo que `props.listaBotones` es un arreglo bidimensional\n    for (let i = 0; i < props.listaBotones.length; i++) {\n      for (let j = 0; j < props.listaBotones[i].length; j++) {\n        // Corregimos la generación de botones\n        if (i % 2 === 0) {\n          lista.push(/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => props.clicar(i, j),\n            color: props.listaBotones[i][j].color\n          }, `btn-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 22\n          }, this));\n          lista.push(/*#__PURE__*/_jsxDEV(Button, {\n            outline: true\n          }, `btn-out-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 22\n          }, this));\n        } else {\n          lista.push(/*#__PURE__*/_jsxDEV(Button, {\n            outline: true\n          }, `btn-out-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 22\n          }, this));\n          lista.push(/*#__PURE__*/_jsxDEV(Button, {\n            color: props.listaBotones[i][j].color\n          }, `btn-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 22\n          }, this));\n        }\n      }\n      lista.push(/*#__PURE__*/_jsxDEV(\"br\", {}, `br-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lista\n    }, void 0, false);\n  }\n}\n_c = Botonera;\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listaBotones: [],\n      // Inicializamos como array vacío\n      playable: false\n    };\n  }\n  clickar(i, j) {\n    let copiaLista = this.state.listaBotones;\n    copiaLista[i][j].color = \"primary\";\n    this.setState({\n      listaBotones: copiaLista\n    });\n  }\n  jugar() {\n    let copPlayable = this.state.playable;\n    let copLista = [];\n    if (!copPlayable) {\n      // Creamos la lista de botones dinámicamente como un arreglo bidimensional\n      for (let i = 0; i < 8; i++) {\n        let fila = [];\n        for (let j = 0; j < 4; j++) {\n          if (i < 5) {\n            fila.push({\n              libre: true,\n              color: \"secondary\"\n            });\n          } else {\n            fila.push({\n              libre: true,\n              color: \"success\"\n            });\n          }\n        }\n        copLista.push(fila); // Agregamos la fila al arreglo principal\n      }\n      copPlayable = true;\n    } else {\n      // Si ya está en modo jugable, reseteamos\n      copLista = [];\n      copPlayable = false;\n    }\n    this.setState({\n      listaBotones: copLista,\n      playable: copPlayable\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.jugar(),\n          children: \"Jugar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Botonera, {\n          cliclar: (i, j) => this.clicar(i, j),\n          listaBotones: this.state.listaBotones,\n          playable: this.state.playable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Botonera\");","map":{"version":3,"names":["React","Component","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Botonera","props","playable","lista","i","listaBotones","length","j","push","onClick","clicar","color","fileName","_jsxFileName","lineNumber","columnNumber","outline","children","_c","App","constructor","state","clickar","copiaLista","setState","jugar","copPlayable","copLista","fila","libre","render","className","cliclar","$RefreshReg$"],"sources":["C:/xampp/htdocs/Proyectos/Curso24-25/REACT/practicar/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Botonera(props) {\r\n  if (props.playable) {\r\n    let lista = [];\r\n\r\n    // Suponiendo que `props.listaBotones` es un arreglo bidimensional\r\n    for (let i = 0; i < props.listaBotones.length; i++) {\r\n      for (let j = 0; j < props.listaBotones[i].length; j++) {\r\n        // Corregimos la generación de botones\r\n        if (i % 2 === 0) {\r\n          lista.push(<Button onClick={()=>props.clicar(i,j)} color={props.listaBotones[i][j].color} key={`btn-${i}-${j}`} />);\r\n          lista.push(<Button outline key={`btn-out-${i}-${j}`} />);\r\n        } else {\r\n          lista.push(<Button outline key={`btn-out-${i}-${j}`} />);\r\n          lista.push(<Button color={props.listaBotones[i][j].color} key={`btn-${i}-${j}`} />);\r\n        }\r\n      }\r\n      lista.push(<br key={`br-${i}`} />);\r\n    }\r\n    return <>{lista}</>;\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listaBotones: [], // Inicializamos como array vacío\r\n      playable: false,\r\n    };\r\n  }\r\n\r\n  clickar(i, j) {\r\n    let copiaLista=this.state.listaBotones\r\n\r\n    copiaLista[i][j].color=\"primary\";\r\n    this.setState({listaBotones:copiaLista})\r\n  }\r\n\r\n  jugar() {\r\n    let copPlayable = this.state.playable;\r\n    let copLista = [];\r\n\r\n    if (!copPlayable) {\r\n      // Creamos la lista de botones dinámicamente como un arreglo bidimensional\r\n      for (let i = 0; i < 8; i++) {\r\n        let fila = [];\r\n        for (let j = 0; j < 4; j++) {\r\n          if (i < 5) {\r\n            fila.push({ libre: true, color: \"secondary\" });\r\n          } else {\r\n            fila.push({ libre: true, color: \"success\" });\r\n          }\r\n        }\r\n        copLista.push(fila); // Agregamos la fila al arreglo principal\r\n      }\r\n      copPlayable = true;\r\n    } else {\r\n      // Si ya está en modo jugable, reseteamos\r\n      copLista = [];\r\n      copPlayable = false;\r\n    }\r\n\r\n    this.setState({ listaBotones: copLista, playable: copPlayable });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Button onClick={() => this.jugar()}>Jugar</Button>\r\n          <br />\r\n          <Botonera cliclar={(i,j)=>this.clicar(i,j)} listaBotones={this.state.listaBotones} playable={this.state.playable} />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}